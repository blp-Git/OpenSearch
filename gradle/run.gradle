/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * The OpenSearch Contributors require contributions made to
 * this file be licensed under the Apache-2.0 license or a
 * compatible open source license.
 *
 * Modifications Copyright OpenSearch Contributors. See
 * GitHub history for details.
 */

/*
 * Licensed to Elasticsearch under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
import org.opensearch.gradle.testclusters.RunTask

apply plugin: 'opensearch.testclusters'

def numNodes = findProperty('numNodes') as Integer ?: 1
def numZones = findProperty('numZones') as Integer ?: 1

testClusters {
  runTask {
    testDistribution = 'archive'
    if (numZones > 1) numberOfZones = numZones
    if (numNodes > 1) numberOfNodes = numNodes

    // Remote Store Settings
    setting 'cluster.remote_store.state.enabled', 'true'
    setting 'cluster.remote_store.state.path.prefix', 'blp'
    setting 'cluster.indices.replication.strategy', 'SEGMENT'

    // Node attributes for segment repository
    setting 'node.attr.remote_store.segment.repository', 'seg'
    setting 'node.attr.remote_store.repository.seg.type', 'fs'
    setting 'node.attr.remote_store.repository.seg.settings.location', '/Volumes/workplace/opensearch-project3/OpenSearch/build/testclusters/runTask-0/repo/seg'

    // Node attributes for translog repository
    setting 'node.attr.remote_store.translog.repository', 'rem'
    setting 'node.attr.remote_store.repository.rem.type', 'fs'
    setting 'node.attr.remote_store.repository.rem.settings.location', '/Volumes/workplace/opensearch-project3/OpenSearch/build/testclusters/runTask-0/repo/rem'

    // Node attributes for state repository
    setting 'node.attr.remote_store.state.repository', 'state'
    setting 'node.attr.remote_store.repository.state.type', 'fs'
    setting 'node.attr.remote_store.repository.state.settings.location', '/Volumes/workplace/opensearch-project3/OpenSearch/build/testclusters/runTask-0/repo/state'

    // Additional settings from your docker configuration
    setting 'path.repo', '/Volumes/workplace/opensearch-project3/OpenSearch/build/testclusters/runTask-0/repo'

    if (findProperty("installedPlugins")) {
      installedPlugins = Eval.me(installedPlugins)
      for (String p : installedPlugins) {
        plugin('plugins:'.concat(p))
      }
    }
  }
}

tasks.register("run", RunTask) {
  useCluster testClusters.runTask;
  description = 'Runs opensearch in the foreground'
  group = 'Verification'

  impliesSubProjects = true
}
